// <auto-generated />
using System;
using HelpDesk.Server.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelpDesk.Server.Migrations
{
    [DbContext(typeof(HelpDeskContext))]
    [Migration("20220606153418_AddEstadoMensajesChat")]
    partial class AddEstadoMensajesChat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HelpDesk.Shared.Models.Archivo", b =>
                {
                    b.Property<long>("ArchivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Adjunto")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("FechaSubido")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("ArchivoId");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.ArchivoUsuario", b =>
                {
                    b.Property<long>("ArchivoId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("ArchivoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ArchivoUsuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Ausencia", b =>
                {
                    b.Property<long>("AusenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaComienzo")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<long>("TipoAusenciaId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoAusenciaNombre")
                        .HasColumnType("longtext");

                    b.HasKey("AusenciaId");

                    b.HasIndex("TipoAusenciaId");

                    b.ToTable("Ausencias");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Departamento", b =>
                {
                    b.Property<long>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Iniciales")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<bool>("TieneTickets")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Dispositivo", b =>
                {
                    b.Property<Guid>("DispositivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CompradoA")
                        .HasColumnType("longtext");

                    b.Property<long>("DepartamentoId")
                        .HasColumnType("bigint");

                    b.Property<string>("DepartamentoNombre")
                        .HasColumnType("longtext");

                    b.Property<long>("EmpresaExternaId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpresaExternaNombre")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInstalado")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("FuncionaBien")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Licencia")
                        .HasColumnType("longtext");

                    b.Property<bool>("LlevaMantenimiento")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("Situacion")
                        .HasColumnType("longtext");

                    b.Property<long>("TipoDispositivoId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoNombre")
                        .HasColumnType("longtext");

                    b.Property<int>("UsuariosCuenta")
                        .HasColumnType("int");

                    b.Property<bool>("Utilizado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("DispositivoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("EmpresaExternaId");

                    b.HasIndex("TipoDispositivoId");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.DispositivoUsuario", b =>
                {
                    b.Property<Guid>("DispositivoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("DispositivoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DispositivoUsuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EmpresaExterna", b =>
                {
                    b.Property<long>("EmpresaExternaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonoContacto")
                        .HasColumnType("longtext");

                    b.HasKey("EmpresaExternaId");

                    b.ToTable("EmpresasExternas");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoAusencia", b =>
                {
                    b.Property<long>("EstadoAusenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("AusenciaId")
                        .HasColumnType("bigint");

                    b.Property<string>("EstadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoEstadoAusencia")
                        .HasColumnType("int");

                    b.HasKey("EstadoAusenciaId");

                    b.HasIndex("AusenciaId");

                    b.ToTable("EstadoAusencia");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoDispositivo", b =>
                {
                    b.Property<Guid>("EstadoDispositivoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DispositivoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("EstadoDispositivoId");

                    b.ToTable("EstadosDispositivo");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoFichaje", b =>
                {
                    b.Property<long>("EstadoFichajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("EstadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("FichajeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoEstadoFichaje")
                        .HasColumnType("int");

                    b.HasKey("EstadoFichajeId");

                    b.HasIndex("FichajeId");

                    b.ToTable("EstadosFichajes");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoTicket", b =>
                {
                    b.Property<long>("EstadoTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("EstadoTicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("EstadosTicket");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoTurno", b =>
                {
                    b.Property<long>("EstadoTurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("EstadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoEstadoTurno")
                        .HasColumnType("int");

                    b.Property<long>("TurnoId")
                        .HasColumnType("bigint");

                    b.HasKey("EstadoTurnoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("EstadoTurnos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Fichaje", b =>
                {
                    b.Property<long>("FichajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("FuenteEntrada")
                        .HasColumnType("longtext");

                    b.Property<string>("FuenteSalida")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("HoraEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("HoraSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("JornadaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocalizacionEntradaLocalizacionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocalizacionSalidaLocalizacionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("FichajeId");

                    b.HasIndex("JornadaId");

                    b.HasIndex("LocalizacionEntradaLocalizacionId");

                    b.HasIndex("LocalizacionSalidaLocalizacionId");

                    b.ToTable("Fichajes");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.GrupoChat", b =>
                {
                    b.Property<Guid>("GrupoChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CreadoPorUsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.HasKey("GrupoChatId");

                    b.HasIndex("CreadoPorUsuarioId");

                    b.ToTable("GruposChat");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.GrupoChatUsuario", b =>
                {
                    b.Property<Guid>("GrupoChatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("GrupoChatId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("GrupoChatUsuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Jornada", b =>
                {
                    b.Property<long>("JornadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AusenciaCuenta")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaJornada")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImagenUsuario")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UsuarioNombreCompleto")
                        .HasColumnType("longtext");

                    b.HasKey("JornadaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Jornadas");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.JornadaAusencia", b =>
                {
                    b.Property<long>("JornadaId")
                        .HasColumnType("bigint");

                    b.Property<long>("AusenciaId")
                        .HasColumnType("bigint");

                    b.HasKey("JornadaId", "AusenciaId");

                    b.HasIndex("AusenciaId");

                    b.ToTable("JornadaAusencia");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.JornadaTurno", b =>
                {
                    b.Property<long>("JornadaId")
                        .HasColumnType("bigint");

                    b.Property<long>("TurnoId")
                        .HasColumnType("bigint");

                    b.HasKey("JornadaId", "TurnoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("JornadaTurno");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Localizacion", b =>
                {
                    b.Property<long>("LocalizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Town")
                        .HasColumnType("longtext");

                    b.HasKey("LocalizacionId");

                    b.ToTable("Localizacion");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.MensajeChat", b =>
                {
                    b.Property<long>("MensajeChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CreadoPorUsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("GrupoChatId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Mensaje")
                        .HasColumnType("longtext");

                    b.HasKey("MensajeChatId");

                    b.HasIndex("CreadoPorUsuarioId");

                    b.HasIndex("GrupoChatId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.MensajeChatUsuario", b =>
                {
                    b.Property<long>("MensajeChatId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("FechaLeido")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Leido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("MensajeChatId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MensajeChatUsuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Situacion", b =>
                {
                    b.Property<long>("SituacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<long>("ZonaId")
                        .HasColumnType("bigint");

                    b.HasKey("SituacionId");

                    b.HasIndex("ZonaId");

                    b.ToTable("Situaciones");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.SuplementoTicket", b =>
                {
                    b.Property<long>("SuplementoTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("CreadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("SuplementoTicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("SuplementosTicket");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Ticket", b =>
                {
                    b.Property<long>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Area")
                        .HasColumnType("longtext");

                    b.Property<string>("AsignadoA")
                        .HasColumnType("longtext");

                    b.Property<string>("AsignadoANombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("CreadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<string>("Departamento")
                        .HasColumnType("longtext");

                    b.Property<string>("Dispositivo")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailContacto")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("EstadosCuenta")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FechaSolucionado")
                        .HasColumnType("longtext");

                    b.Property<string>("Gravedad")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<bool>("Publico")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RemotoApp")
                        .HasColumnType("longtext");

                    b.Property<string>("RemotoContrasena")
                        .HasColumnType("longtext");

                    b.Property<string>("RemotoID")
                        .HasColumnType("longtext");

                    b.Property<string>("SolucionadoPor")
                        .HasColumnType("longtext");

                    b.Property<string>("SolucionadoPorNombreCompleto")
                        .HasColumnType("longtext");

                    b.Property<int>("SuplementosCuenta")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoContacto")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoTicket")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.Property<int>("ZonasCuenta")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.TipoAusencia", b =>
                {
                    b.Property<long>("TipoAusenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("NombreAusencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("TipoAusenciaId");

                    b.ToTable("TiposAusencias");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.TipoDispositivo", b =>
                {
                    b.Property<long>("TipoDispositivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("TipoDispositivoId");

                    b.ToTable("TiposDispositivo");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.TipoTicket", b =>
                {
                    b.Property<long>("TipoTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("TipoTicketId");

                    b.ToTable("TiposTicket");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Turno", b =>
                {
                    b.Property<long>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("HoraComienzo")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("HoraFin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("TurnoId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("Contrasena")
                        .HasColumnType("longtext");

                    b.Property<long>("DepartamentoId")
                        .HasColumnType("bigint");

                    b.Property<string>("DepartamentoNombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EstaConectado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext");

                    b.Property<string>("FechaCreado")
                        .HasColumnType("longtext");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("longtext");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("longtext");

                    b.Property<string>("Fuente")
                        .HasColumnType("longtext");

                    b.Property<string>("Identificador")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<long?>("Notificaciones")
                        .HasColumnType("bigint");

                    b.Property<string>("Rol")
                        .HasColumnType("longtext");

                    b.Property<string>("SobreMi")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono2")
                        .HasColumnType("longtext");

                    b.Property<long?>("TemaOscuro")
                        .HasColumnType("bigint");

                    b.HasKey("UsuarioId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Zona", b =>
                {
                    b.Property<long>("ZonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("ZonaId");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.ZonaTicket", b =>
                {
                    b.Property<long>("ZonaTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("Situacion")
                        .HasColumnType("longtext");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("ZonaTicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("ZonasTicket");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.ArchivoUsuario", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Archivo", "Archivo")
                        .WithMany("Usuarios")
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.Usuario", "Usuario")
                        .WithMany("Archivos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Ausencia", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.TipoAusencia", "TipoAusencia")
                        .WithMany("Ausencias")
                        .HasForeignKey("TipoAusenciaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoAusencia");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Dispositivo", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.EmpresaExterna", "EmpresaExterna")
                        .WithMany("Dispositivos")
                        .HasForeignKey("EmpresaExternaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.TipoDispositivo", "Tipo")
                        .WithMany("Dispositivos")
                        .HasForeignKey("TipoDispositivoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("EmpresaExterna");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.DispositivoUsuario", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Dispositivo", "Dispositivo")
                        .WithMany("Usuarios")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.Usuario", "Usuario")
                        .WithMany("Dispositivos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoAusencia", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Ausencia", "Ausencia")
                        .WithMany("Estados")
                        .HasForeignKey("AusenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ausencia");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoDispositivo", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Dispositivo", "Dispositivo")
                        .WithMany("Estados")
                        .HasForeignKey("EstadoDispositivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoFichaje", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Fichaje", "Fichaje")
                        .WithMany("Estados")
                        .HasForeignKey("FichajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fichaje");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoTicket", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Ticket", "Ticket")
                        .WithMany("Estados")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EstadoTurno", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Turno", "Turno")
                        .WithMany("Estados")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Fichaje", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Jornada", "Jornada")
                        .WithMany("Fichajes")
                        .HasForeignKey("JornadaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.Localizacion", "LocalizacionEntrada")
                        .WithMany()
                        .HasForeignKey("LocalizacionEntradaLocalizacionId");

                    b.HasOne("HelpDesk.Shared.Models.Localizacion", "LocalizacionSalida")
                        .WithMany()
                        .HasForeignKey("LocalizacionSalidaLocalizacionId");

                    b.Navigation("Jornada");

                    b.Navigation("LocalizacionEntrada");

                    b.Navigation("LocalizacionSalida");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.GrupoChat", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Usuario", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorUsuarioId");

                    b.Navigation("CreadoPor");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.GrupoChatUsuario", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.GrupoChat", "GrupoChat")
                        .WithMany("Usuarios")
                        .HasForeignKey("GrupoChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.Usuario", "Usuario")
                        .WithMany("GruposChat")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoChat");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Jornada", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Usuario", "Usuario")
                        .WithMany("Jornadas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.JornadaAusencia", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Ausencia", "Ausencia")
                        .WithMany("Jornadas")
                        .HasForeignKey("AusenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.Jornada", "Jornada")
                        .WithMany("Ausencias")
                        .HasForeignKey("JornadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ausencia");

                    b.Navigation("Jornada");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.JornadaTurno", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Jornada", "Jornada")
                        .WithMany("Turnos")
                        .HasForeignKey("JornadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.Turno", "Turno")
                        .WithMany("Jornadas")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jornada");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.MensajeChat", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Usuario", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorUsuarioId");

                    b.HasOne("HelpDesk.Shared.Models.GrupoChat", "GrupoChat")
                        .WithMany("Mensajes")
                        .HasForeignKey("GrupoChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreadoPor");

                    b.Navigation("GrupoChat");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.MensajeChatUsuario", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.MensajeChat", "MensajeChat")
                        .WithMany("Estados")
                        .HasForeignKey("MensajeChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDesk.Shared.Models.Usuario", "Usuario")
                        .WithMany("EstadosMensajes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MensajeChat");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Situacion", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Zona", "Zona")
                        .WithMany("Situaciones")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.SuplementoTicket", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Ticket", "Ticket")
                        .WithMany("Suplementos")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Usuario", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.ZonaTicket", b =>
                {
                    b.HasOne("HelpDesk.Shared.Models.Ticket", "Ticket")
                        .WithMany("Zonas")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Archivo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Ausencia", b =>
                {
                    b.Navigation("Estados");

                    b.Navigation("Jornadas");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Departamento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Dispositivo", b =>
                {
                    b.Navigation("Estados");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.EmpresaExterna", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Fichaje", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.GrupoChat", b =>
                {
                    b.Navigation("Mensajes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Jornada", b =>
                {
                    b.Navigation("Ausencias");

                    b.Navigation("Fichajes");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.MensajeChat", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Ticket", b =>
                {
                    b.Navigation("Estados");

                    b.Navigation("Suplementos");

                    b.Navigation("Zonas");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.TipoAusencia", b =>
                {
                    b.Navigation("Ausencias");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.TipoDispositivo", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Turno", b =>
                {
                    b.Navigation("Estados");

                    b.Navigation("Jornadas");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Usuario", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("Dispositivos");

                    b.Navigation("EstadosMensajes");

                    b.Navigation("GruposChat");

                    b.Navigation("Jornadas");
                });

            modelBuilder.Entity("HelpDesk.Shared.Models.Zona", b =>
                {
                    b.Navigation("Situaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
